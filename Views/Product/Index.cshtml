@model IEnumerable<first_asp_app.Models.Product>

@{
    ViewData["Title"] = "商品一覧";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>商品一覧</h1>
        @if (User.Identity.IsAuthenticated)
        {
            <a href="@Url.Action("Index", "Cart")" class="btn btn-outline-primary">
                <i class="fas fa-shopping-cart"></i> カートを見る
            </a>
        }
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-warning">
            @ViewBag.ErrorMessage
        </div>
    }

    @if (Model != null && Model.Any())
    {
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-md-4 mb-4">
                    <div class="card @(item.StockQuantity <= 0 ? "border-danger" : "")">
                        <div class="card-body">
                            <h5 class="card-title">@item.Name</h5>
                            <p class="card-text">@item.Description</p>
                            <p class="card-text">価格: ¥@item.Price.ToString("N0")</p>
                            <p class="card-text @(item.StockQuantity <= 0 ? "text-danger" : "")">
                                在庫: @item.StockQuantity 個
                                @if (item.StockQuantity <= 0)
                                {
                                    <span class="badge bg-danger">在庫切れ</span>
                                }
                            </p>
                            <div class="d-flex gap-2">
                                <a asp-action="Details"
                                   asp-route-id="@item.Id"
                                   class="btn @(item.StockQuantity <= 0 ? "btn-secondary disabled" : "btn-primary")">
                                    @(item.StockQuantity <= 0 ? "在庫切れ" : "詳細")
                                </a>

                                @if (item.StockQuantity > 0 && User.Identity.IsAuthenticated)
                                {
                                    <form asp-action="AddToCart" method="post" style="display: inline;">
                                        <input type="hidden" name="productId" value="@item.Id" />
                                        <input type="hidden" name="quantity" value="1" />
                                        <button type="submit" class="btn btn-success">
                                            カートに追加
                                        </button>
                                    </form>
                                }
                                else if (item.StockQuantity > 0 && !User.Identity.IsAuthenticated)
                                {
                                    <a href="@Url.Action("Login", "Account")" class="btn btn-outline-primary btn-sm">
                                        ログイン
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info">
            表示可能な商品がありません。
        </div>
    }
</div>

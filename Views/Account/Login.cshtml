@{
    ViewData["Title"] = "ログイン";
}

<div class="container mt-4">
    <h2>ログイン</h2>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <p class="mb-0">@error.ErrorMessage</p>
            }
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    <div class="card">
        <div class="card-header bg-dark text-white">
            会員のお客様
        </div>
        <div class="card-body">
            <div class="mb-4">
                <h6>【２０２２年５月１８日（サイトリニューアル以降）に会員登録された方】</h6>
                <p>メールアドレス欄にご登録時のメールアドレスを入力してください。</p>
                <h6>【２０２２年５月１８日（サイトリニューアル以降）に会員登録されたた方】</h6>
                <p class="text-primary">会員IDをお持ちの方はメールアドレス欄に会員IDを入力してください。</p>
                <p>サイトリニューアル以降にメールアドレスを変更された場合は、<br />
                メールアドレス欄にメールアドレスを入力してください。</p>
            </div>

            <form method="post" asp-action="Login" asp-antiforgery="true">
                @if (!string.IsNullOrEmpty(ViewData["ReturnUrl"]?.ToString()))
                {
                    <input type="hidden" name="returnUrl" value="@ViewData["ReturnUrl"]" />
                }

                <div class="form-group">
                    <label for="email">メールアドレス（会員ID）</label>
                    <input type="email" class="form-control" id="email" name="email"
                            autocomplete="email">
                    <span class="text-danger field-validation-error" data-valmsg-for="email"></span>
                </div>

                <div class="form-group mt-3">
                    <label for="password">パスワード</label>
                    <div class="input-group">
                        <input type="password" class="form-control" id="password" name="password" 
                               autocomplete="current-password"
                               pattern=".{6,}" title="パスワードは6文字以上必要です">
                        <button type="button" class="btn btn-outline-secondary" id="togglePassword">
                            <i class="bi bi-eye"></i>
                        </button>
                    </div>
                    <span class="text-danger field-validation-error" data-valmsg-for="password"></span>
                </div>

                <div class="form-group mt-3">
                    <div class="row">
                        <div class="col">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="rememberMe" name="rememberMe">
                                <label class="form-check-label" for="rememberMe">ログイン状態を保持する</label>
                            </div>
                        </div>
                        <div class="col text-end">
                            <a href="#" class="text-primary">パスワードをお忘れの方はこちら</a>
                        </div>
                    </div>
                </div>

                <button type="submit" class="btn btn-success w-100 mt-4"
                        data-loading-text="ログイン中...">ログイン</button>
            </form>
        </div>
    </div>

    <div class="card mt-4">
        <div class="card-body">
            <h5>Amazonアカウントでログイン</h5>
            <p>Amazonアカウントを利用して会員登録されたお客様は、AmazonのID、パスワードで、ログインすることができます。</p>
            <button class="btn btn-warning w-100" onclick="handleAmazonLogin()">
                <img src="amazon-logo.png" alt="Amazon" style="height: 20px;"> でログイン
            </button>
        </div>
    </div>

    <div class="card mt-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-8">
                    <h5>初めてご利用の方・会員以外の方</h5>
                    <p>初めてご利用のお客様は、こちらから会員登録を行ってください。メールアドレスとパスワードを登録しておくと便利にお買い物ができるようになります。</p>
                </div>
                <div class="col-md-4 d-flex align-items-center">
                    <a asp-action="Register" class="btn btn-success w-100">新規会員登録</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // パスワード表示切り替え
        document.getElementById('togglePassword').addEventListener('click', function() {
            const password = document.getElementById('password');
            const icon = this.querySelector('i');

            if (password.type === 'password') {
                password.type = 'text';
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                password.type = 'password';
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        });

        // フォーム送信時の二重送信防止
        document.querySelector('form').addEventListener('submit', function(e) {
            const submitButton = this.querySelector('button[type="submit"]');
            if (submitButton.disabled) {
                e.preventDefault();
                return;
            }
            submitButton.disabled = true;
            submitButton.textContent = submitButton.dataset.loadingText;
        });

        // バリデーションエラーが発生した場合、ボタンを再度有効化
        if (document.querySelector('.alert-danger')) {
            document.querySelector('button[type="submit"]').disabled = false;
        }
    </script>
    
    @* クライアントサイドバリデーションの追加 *@
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}
